name: Docker CI
on: [pull_request, push]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container_version: [v0.9.0]
    container: dolfinx/dolfinx:${{ matrix.container_version }}
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
      
        - name: Install local package and dependencies
          run: |
            pip install .[test]

        - name: Run tests
          run: |
            python3 -m pytest test/ --cov festim --cov-report xml --cov-report term
        
        - name: Upload to codecov
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: ./coverage.xml
  
  run-tests-on-nightly-dolfinx:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        container_version: [nightly]
    container: dolfinx/dolfinx:${{ matrix.container_version }}
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
      
        - name: Install local package and dependencies
          run: |
            pip install .[test]

        - name: Run tests
          id: check
          run: |
            if ! python3 -m pytest test/ --cov festim --cov-report xml --cov-report term: then
              echo "warning=true" >> $GITHUB_ENV
            fi

        - name: Ensure job is not marked as failure
          if: always()
          run: echo "Forcing job success"

        - name: Upload to codecov
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: ./coverage.xml
        
        - name: Update or create a comment
          if: env.warning == 'true'
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const { owner, repo } = context.repo;
              const issue_number = context.payload.pull_request.number;
  
              // Fetch existing comments
              const { data: comments } = await github.rest.issues.listComments({
                owner, repo, issue_number
              });
  
              // Look for an existing warning comment
              const warningComment = comments.find(comment => 
                comment.user.login === 'github-actions[bot]' && 
                comment.body.includes("⚠️ Warning")
              );
  
              if (warningComment) {
                // Update the existing warning comment
                await github.rest.issues.updateComment({
                  owner, repo,
                  comment_id: warningComment.id,
                  body: "⚠️ Warning: Some-command failed, but workflow continues. (Updated)"
                });
              } else {
                // Post a new comment if none exists
                await github.rest.issues.createComment({
                  owner, repo, issue_number,
                  body: "⚠️ Warning: Some-command failed, but workflow continues."
                });
              }
      